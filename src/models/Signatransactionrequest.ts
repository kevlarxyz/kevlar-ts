/* tslint:disable */
/* eslint-disable */
/**
 * Vault Ethereum Plugin
 * This is a Vault plugin that allows for the creation of Ethereum accounts and signing of transactions using those accounts. Contact Support:  Name: @kevlarxyz  Email: support@kevlar.xyz
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Signatransactionrequest
 */
export interface Signatransactionrequest {
    /**
     * 
     * @type {any}
     * @memberof Signatransactionrequest
     */
    amount: any | null;
    /**
     * 
     * @type {any}
     * @memberof Signatransactionrequest
     */
    data: any | null;
    /**
     * 
     * @type {any}
     * @memberof Signatransactionrequest
     */
    to: any | null;
}

/**
 * Check if a given object implements the Signatransactionrequest interface.
 */
export function instanceOfSignatransactionrequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "amount" in value;
    isInstance = isInstance && "data" in value;
    isInstance = isInstance && "to" in value;

    return isInstance;
}

export function SignatransactionrequestFromJSON(json: any): Signatransactionrequest {
    return SignatransactionrequestFromJSONTyped(json, false);
}

export function SignatransactionrequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): Signatransactionrequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'amount': json['amount'],
        'data': json['data'],
        'to': json['to'],
    };
}

export function SignatransactionrequestToJSON(value?: Signatransactionrequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'amount': value.amount,
        'data': value.data,
        'to': value.to,
    };
}

